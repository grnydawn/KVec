#!/usr/bin/python
import os
import sys
import fcntl
import signal

fd = None

def signal_handler(signal, frame):
    print('Exiting Vecparizer Backend Service')
    unlock_file()
    sys.exit(0)
signal.signal(signal.SIGINT, signal_handler)

def lock_file(lockfile):
    global fd

    fd = open(lockfile, 'w+')
    fd.write('%d'%os.getpid())
    fd.flush()

    try:
        fcntl.flock(fd, fcntl.LOCK_EX | fcntl.LOCK_NB)
        return fd
    except Exception as e:
        print e
        print '%s is locked. Please make sure that previous run of Vecparizer backend is finished.'%lockfile
        sys.exit(-1)

def unlock_file():
    import time; time.sleep(100)
    if fd is None: return
    fcntl.flock(fd, fcntl.LOCK_UN)
    fd.close()

def main():
    pass

if __name__ == '__main__':
    lock_file('../.vpbelock')
    main()
    unlock_file()
